'use strict';

// Dependencies
var bcrypt = require('bcrypt');
var BaseService = require('core/base').BaseService;
var User = require('./models/user.js');

/**
 * Class containing logic for validating user login
 * @author kvermeer
 */
class LoginService extends BaseService {

    /**
     * Verifies if a user's provided login credentials are correct
     * @param {string} email - email for user
     * @param {string} password - password for logging into user account
     * @return {Promise}
     */
    checkLoginCredentials(email, password) {
        return User.findOne({
            where: {
                login: email
            }
        }).then(function(user) {
            if (user === null) {
                return this.getErrorResponse('LOGIN_FAILED');
            }

            var userPasswordHash = user.get('password_hash');
            if (bcrypt.compareSync(password, userPasswordHash)) { // Credentials are correct
                return this.getSuccessResponse({
                    userId: user.get('user_id')
                })
            } else {
                return this.getErrorResponse('LOGIN_FAILED');
            }
        }.bind(this)).catch(function(err) {
            return this.getErrorResponse('LOGIN_FAILED');
        }.bind(this));
    }
}

module.exports = LoginService;
